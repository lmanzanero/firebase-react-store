{"version":3,"sources":["webpack://front-end/./src/components/cart/CartProduct.js","webpack://front-end/./src/pages/cart.js"],"names":["CartProduct","card","data","node","class","src","image","high","alt","name","description","href","viewBox","d","type","value","price","Cart","location","props","useContext","CartContext","products","initalState","addProduct","productId","referenceNumber","phone","promocode","useState","orderDetails","setOrderDetails","isLoading","setLoading","setError","canSubmit","setCanSubmit","useEffect","length","console","log","handleOrder","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","json","error","navigate","state","referenceCode","finally","catch","message","handleChange","e","target","StaticQuery","query","render","allRestApiApiProducts","edges","map","product","key","includes","id","className","for","onChange","placeholder","required","onClick","disabled"],"mappings":"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","file":"component---src-pages-cart-js-b36f813ee87894a134dc.js","sourcesContent":["import React from 'react'\n\nexport default function CartProduct({ data }) {\n  const card = data.node;\n  return (\n      <div class=\"flex items-center hover:bg-gray-100 -mx-8 px-6 py-5\">\n          <div class=\"flex w-2/5\"> \n            <div class=\"w-40\">\n              <img class=\"h-24 object-cover\" src={card.image.high} alt=\"\" />\n            </div>\n            <div class=\"flex flex-col justify-between ml-4 flex-grow\">\n              <span class=\"font-bold text-sm\">{card.name}</span>\n              <span class=\"text-gray-600 text-xs\">{card.description}</span>\n              <a href=\"#\" class=\"font-semibold hover:text-red-500 text-gray-500 text-xs\">Remove</a>\n            </div>\n          </div>\n          <div class=\"flex justify-center w-1/5\">\n            <svg class=\"fill-current text-gray-600 w-3\" viewBox=\"0 0 448 512\"><path d=\"M416 208H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h384c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z\"/>\n            </svg>\n\n            <input class=\"mx-2 border text-center w-8\" type=\"text\" value=\"1\"/>\n\n            <svg class=\"fill-current text-gray-600 w-3\" viewBox=\"0 0 448 512\">\n              <path d=\"M416 208H272V64c0-17.67-14.33-32-32-32h-32c-17.67 0-32 14.33-32 32v144H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h144v144c0 17.67 14.33 32 32 32h32c17.67 0 32-14.33 32-32V304h144c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z\"/>\n            </svg>\n          </div>\n          <span class=\"text-center w-1/5 font-semibold text-sm\">{card.price}</span>\n          <span class=\"text-center w-1/5 font-semibold text-sm\">{card.price}</span>\n      </div>\n  )\n}\n","import React, { useState, useEffect, useContext } from 'react'\nimport { graphql, StaticQuery } from \"gatsby\"\nimport { navigate } from \"gatsby\"\nimport Layout from '../components/layouts/layout'\nimport CartProduct from '../components/cart/CartProduct';  \nimport { CartContext } from '../services/context/CartContext';\n\nexport default function Cart({ data, location, props }) {    \n  const {products, addProduct} = useContext(CartContext);  \n  const initalState = {\n    productId: [...products],\n    referenceNumber: '',\n    name: '',\n    phone: '',\n    promocode: ''\n  }\n  const [orderDetails, setOrderDetails] = useState(initalState);\n  const [isLoading, setLoading ] = useState(false);\n  const [error, setError ] = useState({});\n  const [ canSubmit,  setCanSubmit ] = useState(true);\n\n  useEffect(() => { \n      //todo: Expand on this validation with phone verfication\n     if(orderDetails.name === '' || orderDetails.phone === '' || orderDetails.phone?.length < 7 || orderDetails.phone.length > 7) {\n       setCanSubmit(true);\n     } else {\n       setCanSubmit(false); \n     } \n     console.log(orderDetails, products);\n  }, [orderDetails, products])\n\n  const handleOrder = async () => {\n    setLoading(true);\n    //send state values to api\n    const requestOptions = {\n      method: 'POST', \n      headers: { 'Content-Type': 'application/json'},\n      body: JSON.stringify({\n        \"productId\": `${orderDetails.productId}`,\n        \"name\": `${orderDetails.name}`,\n        \"phone\": `${orderDetails.phone}`, \n      })\n  };\n    await fetch(`https://us-central1-nancy-s-jewerly.cloudfunctions.net/api/order`, requestOptions)\n        .then(response => response.json())\n        .then(data => { \n          if(data.error) { \n            setError(data.error)\n          } else { \n            navigate(`/view-order`,\n            { state: {\n              referenceCode : data.referenceCode\n            }\n          });\n          }\n        })\n        .finally(() => setLoading(false))\n        .catch(error => setError(error.message));\n    }\n\n    const handleChange = (e) => { \n      //spread value to keys \n      setOrderDetails({...orderDetails, [e.target.name]: e.target.value}) \n  }\n\n\n  return (\n    <Layout>\n         <div class=\"container mx-auto mt-10\">\n            <div class=\"flex shadow-md my-10\">\n              <div class=\"w-3/4 bg-gray-50 px-10 py-10\">\n                <div class=\"flex justify-between border-b pb-8\">\n                  <h1 class=\"font-semibold text-2xl\">Shopping Cart</h1>\n                  <h2 class=\"font-semibold text-2xl\">{products?.length} Items</h2>\n                </div>\n                <div class=\"flex mt-10 mb-5\">\n                  <h3 class=\"font-semibold text-gray-600 text-xs uppercase w-2/5\">Product</h3>\n                  <h3 class=\"font-semibold text-center text-gray-600 text-xs uppercase w-1/5 text-center\">Quantity</h3>\n                  <h3 class=\"font-semibold text-center text-gray-600 text-xs uppercase w-1/5 text-center\">Price</h3>\n                  <h3 class=\"font-semibold text-center text-gray-600 text-xs uppercase w-1/5 text-center\">Total</h3>\n                </div>\n\n                <StaticQuery\n                  query={graphql`\n                    {\n                      allRestApiApiProducts {\n                        edges {\n                          node {\n                            name\n                            category\n                            date\n                            description\n                            id\n                            price\n                            slug\n                            image {\n                              high\n                            }\n                            endpointId\n                          }\n                        }\n                      }\n                    }\n                  `}\n                  render={data => \n                    //if product id's are in cart items, display them in the cart\n                     data.allRestApiApiProducts.edges.map((product, key) =>  { \n                       if(products.includes(product.node.id)) {  \n                         return <CartProduct data={product}/>\n                       }\n                    })\n                  }\n                ></StaticQuery>\n                <a href=\"/shop\" class=\"flex font-semibold text-indigo-600 text-sm mt-10\">\n              \n                  <svg class=\"fill-current mr-2 text-indigo-600 w-4\" viewBox=\"0 0 448 512\"><path d=\"M134.059 296H436c6.627 0 12-5.373 12-12v-56c0-6.627-5.373-12-12-12H134.059v-46.059c0-21.382-25.851-32.09-40.971-16.971L7.029 239.029c-9.373 9.373-9.373 24.569 0 33.941l86.059 86.059c15.119 15.119 40.971 4.411 40.971-16.971V296z\"/></svg>\n                  Continue Shopping\n                </a>\n              </div>\n\n              <div id=\"summary\" class=\"w-1/2 px-8 py-10 bg-gray-100\">\n                <div className=\"flex flex-row justify-between border-b\" >\n                  <h1 class=\"font-semibold text-2xl pb-8\">Order Details</h1>\n                  {/* <div className=\"flex flex-row pt-1.5\">\n                    <h4 className=\"font-semibold px-1 text-gray-500 text-1xl\">Status: </h4>\n                    <span class=\"h-6 px-3  rounded-full bg-green-100 text-green-800\">\n                        Paid\n                    </span>\n                  </div> */}\n                </div>  \n                <div class=\"py-3\">\n                  <label for=\"promo\" class=\"font-semibold inline-block mb-3 text-sm uppercase\">Full Name</label>\n                  <input onChange={handleChange} type=\"name\" id=\"name\" name=\"name\" placeholder=\"Name\" class=\"p-2 text-sm w-full\" required/>\n                </div>\n                <div class=\"py-3\">\n                  <label for=\"promo\" class=\"font-semibold inline-block mb-3 text-sm uppercase\">Phone #</label>\n                  <input onChange={handleChange} type=\"phone\" id=\"phone\" name=\"phone\" placeholder=\"+6644584\" class=\"p-2 text-sm w-full\" required/>\n                </div>\n                <div class=\"flex flex-row justify-between\">\n                  <div className=\"py-3\">\n                    <label for=\"promo\" class=\"font-semibold inline-block mb-3 text-sm uppercase\">Promo code</label>\n                    <input onChange={handleChange} type=\"name\" id=\"promo\" name=\"promoCode\" placeholder=\"YES\" class=\"p-2 text-sm w-full\"/>\n                  </div>\n                  {/* <button class=\"bg-red-500 hover:bg-red-600 px-5 py-2 text-sm text-white mt-4 uppercase\">Apply</button> */}\n                </div>\n                {/* <a href=\"#\" class=\"flex font-semibold text-indigo-600 text-sm mt-5\">\n                    View Order\n                </a> */}\n                <div className=\"flex mt-6\">\n                    <label className=\"flex items-center\">\n                      <input type=\"checkbox\" class=\"form-checkbox\"/>\n                      <span class=\"ml-2\">I agree to the <span class=\"underline\">terms and conditions</span></span>\n                    </label>\n                </div>\n                <div className=\"flex mt-6\">\n                    <label className=\"flex items-center\">\n                      <input type=\"checkbox\" class=\"form-checkbox\"/>\n                      <span class=\"ml-2\">I agree to subscribe to recieve <span class=\"underline\"> SMS messages </span> to get notified on orders</span>\n                    </label>\n                </div>\n                <div class=\"border-t mt-8\">\n                  <div class=\"flex font-semibold justify-between py-6 text-sm uppercase\">\n                    <span>Total cost</span>\n                    <span>$5000</span>\n                  </div>\n                  <button type=\"button\" onClick={handleOrder} disabled={canSubmit} class=\"bg-indigo-500 font-semibold hover:bg-indigo-600 disabled:opacity-50  py-3 text-sm text-white uppercase w-full\">Create Order{isLoading ? 'loading...' : ''}</button>\n                </div> \n              </div>\n            </div>\n          </div>\n    </Layout>\n  )\n}\n "],"sourceRoot":""}